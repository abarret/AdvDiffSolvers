// physical parameters
PI = 3.14159265359
L = 1.0

// grid spacing parameters
MAX_LEVELS = 1                            // maximum number of levels in locally refined grid
REF_RATIO  = 4                            // refinement ratio between levels
N = 64                                    // coarsest grid spacing
NFINEST = (REF_RATIO^(MAX_LEVELS - 1))*N  // finest   grid spacing
H = L/NFINEST
CFL_MAX = 0.5
U_MAX = 2.0
DT_MIN = H * CFL_MAX 
DT_MAX = DT_MIN
END_TIME = 2.0
REGRID_INTERVAL = 1
TAG_BUFFER = 1

MIN_REFINE_FACTOR = -4.0
MAX_REFINE_FACTOR = 2.0
LEAST_SQUARES_ORDER = "QUADRATIC"
USE_STRANG_SPLITTING = TRUE
USE_OUTSIDE_LS_FOR_TAGGING = TRUE
ADV_INT_METHOD = "MIDPOINT_RULE"
DIF_INT_METHOD = "TRAPEZOIDAL_RULE"
USE_RBFS =  TRUE
RBF_STENCIL_SIZE = 12
RBF_POLY_ORDER = "QUADRATIC"

UFunction {
   function_0 = "sin(2*PI*t)*cos(PI*X_0)*cos(PI*X_1)"
   function_1 = "sin(2*PI*t)*cos(PI*X_1)*cos(PI*X_0)"
}

Q_bcs {
    acoef_function_0 = "0.0"
    acoef_function_1 = "0.0"
    acoef_function_2 = "0.0"
    acoef_function_3 = "0.0"

    bcoef_function_0 = "1.0"
    bcoef_function_1 = "1.0"
    bcoef_function_2 = "1.0"
    bcoef_function_3 = "1.0"

    gcoef_function_0 = "0.0"
    gcoef_function_1 = "0.0"
    gcoef_function_2 = "0.0"
    gcoef_function_3 = "0.0"
}

Main {

// log file parameters
   log_file_name               = "test.log"
   log_all_nodes               = FALSE

// visualization dump parameters
   viz_writer                  = "VisIt"
   viz_dump_interval           = 8
   viz_dump_dirname            = "viz_adv_diff2d"
   visit_number_procs_per_file = 1

// restart dump parameters
   restart_dump_interval       = 0
   restart_dump_dirname        = "restart_adv_diff2d"

   data_dump_interval          = NFINEST/8
   data_dump_dirname           = "hier_data_IB2d"

   timer_dump_interval = 0
}

CartesianGeometry {
   domain_boxes = [ (0,0),(N - 1,N - 1) ]
   x_lo = -L,-L
   x_up = L,L
   periodic_dimension = 1,1
}

GriddingAlgorithm {
   max_levels = MAX_LEVELS
   ratio_to_coarser {
      level_1 = REF_RATIO,REF_RATIO
      level_2 = REF_RATIO,REF_RATIO
      level_3 = REF_RATIO,REF_RATIO
   }
   largest_patch_size {
      level_0 = 512,512  // all finer levels will use same values as level_0
   }
   smallest_patch_size {
      level_0 =   4,  4  // all finer levels will use same values as level_0
   }
   efficiency_tolerance = 0.9e0  // min % of tag cells in new patch level
   combine_efficiency   = 0.9e0  // chop box if sum of volumes of smaller boxes < efficiency * vol of large box
}

StandardTagAndInitialize {
   tagging_method = "GRADIENT_DETECTOR"
   RefineBoxes {
      level_0 = [( N/4,N/4 ),( 3*N/4 - 1,N/2 - 1 )],[( N/4,N/2 ),( N/2 - 1,3*N/4 - 1 )]
   }
}

LoadBalancer {
   bin_pack_method     = "SPATIAL"
   max_workload_factor = 1
}

TimerManager{
   print_exclusive = TRUE
   print_total     = TRUE
   print_threshold = 0.0
   timer_list      = "LS::*::*","IBAMR::*::*","IBTK::*::*"
}


SLAdvIntegrator {
    start_time           = 0.0e0  // initial simulation time
    end_time             = END_TIME    // final simulation time
    grow_dt              = 2.0e0  // growth factor for timesteps
    regrid_interval      = REGRID_INTERVAL  // effectively disable regridding
    cfl                  = CFL_MAX
    dt_max               = DT_MAX
    dt_min               = DT_MIN
    enable_logging       = TRUE

    min_ls_refine_factor = MIN_REFINE_FACTOR
    max_ls_refine_factor = MAX_REFINE_FACTOR
    least_squares_order = LEAST_SQUARES_ORDER
    advection_ts_type = ADV_INT_METHOD
    use_rbfs = USE_RBFS
    rbf_stencil_size = RBF_STENCIL_SIZE
    rbf_poly_order = RBF_POLY_ORDER
    default_adv_reconstruct_type = "RBF"

    tag_buffer = TAG_BUFFER
    
    num_cycles = 1
}
