// physical parameters
PI = 3.14159265359
L = 4.0
BASE_NAME = "test1"

// grid spacing parameters
MAX_LEVELS = 1                            // maximum number of levels in locally refined grid
REF_RATIO  = 2                            // refinement ratio between levels
N = 128                                    // coarsest grid spacing
NFINEST = (REF_RATIO^(MAX_LEVELS - 1))*N  // finest   grid spacing
H = L/NFINEST
CFL_MAX = 0.5
U_MAX = 15.0
DT_MIN = H * CFL_MAX / U_MAX
DT_MAX = DT_MIN
END_TIME = 2.0
REGRID_INTERVAL = 1
TAG_BUFFER = 1

OUTPUT_BDRY_INFO = TRUE
USING_LS_FCN = TRUE
DRAW_EXACT = FALSE
MIN_REFINE_FACTOR = -4.0
MAX_REFINE_FACTOR = 4.0
LEAST_SQUARES_ORDER = "QUADRATIC"
USE_STRANG_SPLITTING = TRUE
USE_OUT_LS_FOR_TAGGING = FALSE
ADV_INT_METHOD = "MIDPOINT_RULE"
DIF_INT_METHOD = "TRAPEZOIDAL_RULE"
USE_RBFS = FALSE
RBF_STENCIL_SIZE = 2
RBF_POLY_ORDER = "QUADRATIC"
DIFF_SOLVE_ITERS = 3

XCOM = 1.521
YCOM = 1.503
R = 1.0
R_2 = 3.75
R_1 = 0.5
OMEGA_2 = 1.0
OMEGA_1 = 10.0
A = (OMEGA_2*R_2*R_2 - OMEGA_1*R_1*R_1)/(R_2*R_2 - R_1*R_1)
B = (OMEGA_1 - OMEGA_2) * R_1*R_1 * R_2*R_2 / (R_2*R_2 - R_1*R_1)
ROT_PERIOD = 2.0

D_coef = 0.1

Q = "exp(-50*((X_0-0.8)^2 + X_1^2))*10"

// Level set parameters
LS_REINIT_INTERVAL = 1000000//REGRID_INTERVAL
MAX_ITERATIONS_LS     = NFINEST/4
LS_ORDER           = "THIRD_ORDER_ENO"
USE_SUBCELL_FIX    = TRUE
USE_SIGN_FIX       = TRUE
LS_ATOL            = 1e-10

LS_Out {
    R1 = R_1
    R2 = R_2
}

RelaxationLSMethod {
    order              = LS_ORDER
    apply_subcell_fix  = USE_SUBCELL_FIX
    apply_sign_fix     = USE_SIGN_FIX
    sweep_abs_tol      = LS_ATOL
    max_iterations     = MAX_ITERATIONS_LS
    enable_logging     = FALSE
    reinit_interval    = LS_REINIT_INTERVAL
}

LSCutCellOperator {
  robin_boundary = TRUE
  cache_boundary = TRUE
  use_rbfs = USE_RBFS
  stencil_size = RBF_STENCIL_SIZE
}

InsideLSFcn {
    r = R
    x_cent = XCOM,YCOM
    a = A
    b = B
    period = ROT_PERIOD
}

BdryConds {
    k1 = 1.0
    D_coef = D_coef
}

QFcnIn {
   r = R
   D = D_coef
   com = XCOM, YCOM
}

QInitial_out {
    D = 0.05
    R1 = 1.0
    Center = XCOM,YCOM
    velocity = 0.0,0.0
    init_type = "CONSTANT"
    value = 0.0
}


PoissonSolver {
}

UFunction {
   a = A
   b = B
   xcom = 0.0
   ycom = 0.0
   r1 = R_1
   r2 = R_2
   h = H
   period = ROT_PERIOD
   function_0 = "(sqrt(X_0^2+X_1^2) > (r2+h) ? 0.0 : (sqrt(X_0^2+X_1^2) < (r1-h) ? 0.0 : -(a*(X_0^2+X_1^2) + b)*X_1/sqrt(X_0^2+X_1^2)))*sin(2*PI*t / period)"
   function_1 = "(sqrt(X_0^2+X_1^2) > (r2+h) ? 0.0 : (sqrt(X_0^2+X_1^2) < (r1-h) ? 0.0 :  (a*(X_0^2+X_1^2) + b)*X_0/sqrt(X_0^2+X_1^2)))*sin(2*PI*t / period)"
}

Q_bcs {
    D = 1.0

    acoef_function_0 = "1.0"
    acoef_function_1 = "1.0"
    acoef_function_2 = "1.0"
    acoef_function_3 = "1.0"

    bcoef_function_0 = "0.0"
    bcoef_function_1 = "0.0"
    bcoef_function_2 = "0.0"
    bcoef_function_3 = "0.0"

    gcoef_function_0 = Q
    gcoef_function_1 = Q
    gcoef_function_2 = Q
    gcoef_function_3 = Q
}

Main {

// log file parameters
   log_file_name               = "test.log"
   log_all_nodes               = FALSE

// visualization dump parameters
   viz_writer                  = "VisIt"
   viz_dump_interval           = NFINEST/8
   viz_dump_dirname            = "viz_adv_diff2d"
   visit_number_procs_per_file = 1

// restart dump parameters
   restart_dump_interval       = 0
   restart_dump_dirname        = "restart_adv_diff2d"

   data_dump_interval          = NFINEST/8
   data_dump_dirname           = "hier_data_IB2d"

}

CartesianGeometry {
   domain_boxes = [ (0,0),(N - 1,N - 1) ]
   x_lo = -L,-L
   x_up = L,L
   periodic_dimension = 0,0
}

GriddingAlgorithm {
   max_levels = MAX_LEVELS
   ratio_to_coarser {
      level_1 = REF_RATIO,REF_RATIO
      level_2 = REF_RATIO,REF_RATIO
      level_3 = REF_RATIO,REF_RATIO
   }
   largest_patch_size {
      level_0 = 512,512  // all finer levels will use same values as level_0
   }
   smallest_patch_size {
      level_0 =   4,  4  // all finer levels will use same values as level_0
   }
   efficiency_tolerance = 0.9e0  // min % of tag cells in new patch level
   combine_efficiency   = 0.9e0  // chop box if sum of volumes of smaller boxes < efficiency * vol of large box
}

StandardTagAndInitialize {
   tagging_method = "GRADIENT_DETECTOR"
   RefineBoxes {
      level_0 = [( N/4,N/4 ),( 3*N/4 - 1,N/2 - 1 )],[( N/4,N/2 ),( N/2 - 1,3*N/4 - 1 )]
   }
}

LoadBalancer {
   bin_pack_method     = "SPATIAL"
   max_workload_factor = 1
}

TimerManager{
   print_exclusive = FALSE
   print_total     = TRUE
   print_threshold = 0.1
   timer_list      = "IBAMR::*::*","IBTK::*::*","*::*::*"
}


LSAdvDiffIntegrator {
    start_time           = 0.0e0  // initial simulation time
    end_time             = END_TIME    // final simulation time
    grow_dt              = 2.0e0  // growth factor for timesteps
    regrid_interval      = REGRID_INTERVAL  // effectively disable regridding
    cfl                  = CFL_MAX
    dt_max               = DT_MAX
    dt_min               = DT_MIN
    enable_logging       = TRUE

    prescribe_level_set  = USING_LS_FCN
    min_ls_refine_factor = MIN_REFINE_FACTOR
    max_ls_refine_factor = MAX_REFINE_FACTOR
    least_squares_order = LEAST_SQUARES_ORDER
    use_strang_splitting = USE_STRANG_SPLITTING
    advection_ts_type = ADV_INT_METHOD
    diffusion_ts_type = DIF_INT_METHOD
    use_rbfs = USE_RBFS
    rbf_stencil_size = RBF_STENCIL_SIZE
    rbf_poly_order = RBF_POLY_ORDER
   diffusion_solve_iterations = DIFF_SOLVE_ITERS

    tag_buffer = TAG_BUFFER
    
    convective_op_type                 = "PPM"//WAVE_PROP"
    convective_difference_form         = "CONSERVATIVE"
    convective_time_stepping_type      = "TRAPEZOIDAL_RULE"
    init_convective_time_stepping_type = "MIDPOINT_RULE"
    diffusion_time_stepping_type = "TRAPEZOIDAL_RULE"
    num_cycles = 1
}
