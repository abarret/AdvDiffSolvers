// constants
PI = 3.14159265358979

// physical parameters
L   = 1.0
RHO = 1.0
K_TETHER   = 40.0

R = 0.5
MFAC = 0.5

// grid spacing parameters
MAX_LEVELS = 1                            // maximum number of levels in locally refined grid
REF_RATIO  = 4                            // refinement ratio between levels
N = 64                                    // coarsest grid spacing
NFINEST = (REF_RATIO^(MAX_LEVELS - 1))*N  // finest   grid spacing
DX = L/NFINEST

ls_fcn {
  function = "0.5-sqrt(X_0*X_0 + X_1*X_1)"
}

div_ops {
  stencil_size = 12
  rbf_order = "QUADRATIC"
}

MeshMapping {
  max_level = MAX_LEVELS
}

CutCellMapping {
  perturb_nodes = FALSE
}

Main {

// log file parameters
   log_file_name               = "output"
   log_all_nodes               = FALSE

// visualization dump parameters
   viz_writer                  = "VisIt", "ExodusII"
   viz_dump_interval           = 0
   viz_dump_dirname            = "new_viz_adv_diff2d"
   visit_number_procs_per_file = 1

// restart dump parameters
   restart_dump_interval       = 0
   restart_dump_dirname        = "restart_adv_diff2d"

   data_dump_interval          = 0
   data_dump_dirname           = "hier_data_IB2d"

   timer_dump_interval = 0
}

CartesianGeometry {
   domain_boxes = [ (0,0),(N - 1,N - 1) ]
   x_lo = -2,-2
   x_up = 2,2
   periodic_dimension = 1,1
}

GriddingAlgorithm {
   max_levels = MAX_LEVELS
   ratio_to_coarser {
      level_1 = REF_RATIO,REF_RATIO
      level_2 = REF_RATIO,REF_RATIO
      level_3 = REF_RATIO,REF_RATIO
   }
   largest_patch_size {
      level_0 = 512,512  // all finer levels will use same values as level_0
   }
   smallest_patch_size {
      level_0 =   4,  4  // all finer levels will use same values as level_0
   }
   efficiency_tolerance = 0.9e0  // min % of tag cells in new patch level
   combine_efficiency   = 0.9e0  // chop box if sum of volumes of smaller boxes < efficiency * vol of large box
}

StandardTagAndInitialize {
   tagging_method = "REFINE_BOXES"
   RefineBoxes {
//      level_0 = [( N/4,N/4 ),( 3*N/4 - 1,3*N/4 - 1 )]
      level_0 = [( 2,2 ),( N - 1,N - 1 )]
   }
}

LoadBalancer {
   bin_pack_method     = "SPATIAL"
   max_workload_factor = 1
}
