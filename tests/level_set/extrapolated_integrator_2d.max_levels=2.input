// physical parameters
PI = 3.14159265359
L = 3.5

// grid spacing parameters
MAX_LEVELS = 2                            // maximum number of levels in locally refined grid
REF_RATIO  = 4                            // refinement ratio between levels
N = 16                                    // coarsest grid spacing
NFINEST = (REF_RATIO^(MAX_LEVELS - 1))*N  // finest   grid spacing
H = L/NFINEST
CFL_MAX = 0.75
U_MAX = 15.0
REGRID_INTERVAL = 1
TAG_BUFFER = 1

T_START = 0.0
UMAX = 20.0
DT = CFL_MAX * H / UMAX
T_FINAL = 20*DT
DRAW_FREQ = 0.05

OUTPUT_BDRY_INFO = FALSE
USING_LS_FCN = TRUE
DRAW_EXACT = FALSE
MIN_REFINE_FACTOR = -4.0
MAX_REFINE_FACTOR = 2.0
LEAST_SQUARES_ORDER = "QUADRATIC"
USE_STRANG_SPLITTING = TRUE
USE_OUTSIDE_LS_FOR_TAGGING = TRUE
ADV_INT_METHOD = "MIDPOINT_RULE"
DIF_INT_METHOD = "TRAPEZOIDAL_RULE"
USE_RBFS =  TRUE
RBF_STENCIL_SIZE = 12
RBF_POLY_ORDER = "QUADRATIC"

XCOM = 2.0
YCOM = 0.0
R = 1.0
R_2 = 2.0
R_1 = 0.5
OMEGA_2 = 1.0
OMEGA_1 = 5.0
ROT_PERIOD = 2.0

A = (OMEGA_2*R_2*R_2 - OMEGA_1*R_1*R_1)/(R_2*R_2 - R_1*R_1)
B = (OMEGA_1 - OMEGA_2) * R_1*R_1 * R_2*R_2 / (R_2*R_2 - R_1*R_1)

D_coef = 0.1

Q = "exp(-50*((X_0-0.8)^2 + X_1^2))*10"

LSFcn {
    r1 = R_1
    r2 = R_2
}

QFcn {
   outer_rad = R_2
   cent_1 = 2.0,0.0
   cent_2 = -2.0,0.0
   //xcom = XCOM
   //ycom = YCOM
   //function = "((X_0-xcom)*(X_0-xcom)+(X_1-ycom)*(X_1-ycom)) < 1.0 ? (cos(PI*sqrt((X_0-xcom)*(X_0-xcom)+(X_1-ycom)*(X_1-ycom))) + 1.0)^2 : 0.0"
}

AdvDiffIntegrator {
 start_time = T_START
 end_time = T_FINAL
 num_cycles = 1
 convective_time_stepping_type = "ADAMS_BASHFORTH"
 convective_op_type = "CUI"
 convective_difference_form = "CONSERVATIVE"
 dt_max = DT
 enable_logging = TRUE
 num_cells_to_extrap = 4
}

UFcn {
   a = A
   b = B
   xcom = 0.0
   ycom = 0.0
   r1 = R_1
   r2 = R_2
   h = H
   period = ROT_PERIOD
//   function_0 = "(sqrt((X_0-xcom)^2+(X_1-ycom)^2) < (r1-h) ? 0.0 : (sqrt((X_0-xcom)^2+(X_1-ycom)^2) < (r1-h) ? 0.0 : -(a*((X_0-xcom)^2+(X_1-ycom)^2) + b)*(X_1-ycom)/sqrt((X_0-xcom)^2+(X_1-ycom)^2)))*sin(2*PI*t / period)"
//   function_1 = "(sqrt((X_0-xcom)^2+(X_1-ycom)^2) < (r1-h) ? 0.0 : (sqrt((X_0-xcom)^2+(X_1-ycom)^2) < (r1-h) ? 0.0 :  (a*((X_0-xcom)^2+(X_1-ycom)^2) + b)*(X_0-xcom)/sqrt((X_0-xcom)^2+(X_1-ycom)^2)))*sin(2*PI*t / period)"
   function_0 = "(sqrt((X_0-xcom)^2+(X_1-ycom)^2) < (r1-h) ? 0.0 : -(a*((X_0-xcom)^2+(X_1-ycom)^2) + b)*(X_1-ycom)/sqrt((X_0-xcom)^2+(X_1-ycom)^2))*sin(2*PI*t / period)"
   function_1 = "(sqrt((X_0-xcom)^2+(X_1-ycom)^2) < (r1-h) ? 0.0 :  (a*((X_0-xcom)^2+(X_1-ycom)^2) + b)*(X_0-xcom)/sqrt((X_0-xcom)^2+(X_1-ycom)^2))*sin(2*PI*t / period)"
}

Main {

// log file parameters
   log_file_name               = "output"
   log_all_nodes               = FALSE

// visualization dump parameters
   viz_writer                  = "VisIt"
   viz_dump_interval           = 1//NFINEST/8
   viz_dump_dirname            = "viz_adv_diff2d"
   visit_number_procs_per_file = 1

// restart dump parameters
   restart_dump_interval       = 0
   restart_dump_dirname        = "restart_adv_diff2d"

   data_dump_interval          = NFINEST/8
   data_dump_dirname           = "hier_data_IB2d"

   timer_dump_interval = 0
}

CartesianGeometry {
   domain_boxes = [ (0,0),(N - 1,N - 1) ]
   x_lo = -L,-L
   x_up = L,L
   periodic_dimension = 1,1
}

GriddingAlgorithm {
   max_levels = MAX_LEVELS
   ratio_to_coarser {
      level_1 = REF_RATIO,REF_RATIO
      level_2 = REF_RATIO,REF_RATIO
      level_3 = REF_RATIO,REF_RATIO
   }
   largest_patch_size {
      level_0 = 512,512  // all finer levels will use same values as level_0
   }
   smallest_patch_size {
      level_0 =   4,  4  // all finer levels will use same values as level_0
   }
   efficiency_tolerance = 0.9e0  // min % of tag cells in new patch level
   combine_efficiency   = 0.9e0  // chop box if sum of volumes of smaller boxes < efficiency * vol of large box
}

StandardTagAndInitialize {
   tagging_method = "REFINE_BOXES"
   RefineBoxes {
      level_0 = [( N/4,N/4 ),( 3*N/4 - 1,N/2 - 1 )],[( N/4,N/2 ),( N/2 - 1,3*N/4 - 1 )]
   }
}

LoadBalancer {
   bin_pack_method     = "SPATIAL"
   max_workload_factor = 1
}

TimerManager{
   print_exclusive = TRUE
   print_total     = TRUE
   print_threshold = 0.0
   timer_list      = "LS::*::*","IBAMR::*::*","IBTK::*::*"
}
